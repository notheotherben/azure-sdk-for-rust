name: Build and Test

on:
  pull_request:
  push:

env:
  RUSTFLAGS: -Dwarnings
  CARGO_INCREMENTAL: 0

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        rust: [stable]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
        components: rustfmt

    - uses: Swatinem/rust-cache@v1

    - name: fmt
      run: |
        cargo fmt --all -- --check
        ./eng/scripts/check_json_format.sh
        cargo fmt --manifest-path services/Cargo.toml --all -- --check
      if: matrix.rust == 'stable'

    - name: sdk tests
      run: cargo test --workspace

    - name: services tests
      run: cargo build --manifest-path services/Cargo.toml --all

    - name: integration tests
      run: |
        sqllocaldb create MSSQLLocalDB
        sqllocaldb start MSSQLLocalDB

        &"C:\Program Files (x86)\Microsoft SDKs\Azure\Storage Emulator\AzureStorageEmulator.exe" start

        cargo test --features test_integration

    - name: e2e tests build
      run: |
        $PROJECTS = @("core", "cosmos", "identity", "service_bus", "storage")
        foreach ($PROJ in $PROJECTS) {
          echo "Checking e2e tests for $PROJ"
          if (-not (cargo check --tests --features test_e2e --manifest-path sdk/$PROJ/Cargo.toml)) {
            exit 1
          }
        }

    - name: display free disk space
      run: df -h /
      if: ${{ always() }}

